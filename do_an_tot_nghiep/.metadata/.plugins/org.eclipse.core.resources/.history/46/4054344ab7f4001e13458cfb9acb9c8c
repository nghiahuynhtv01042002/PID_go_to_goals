/*
 * pid_module.c
 *
 *  Created on: Apr 1, 2024
 *      Author: Nghia
 */
#include "pid_module.h"
//convert unit
float rad_to_degree(float rad){
	float degree = rad *(180/  3.14);
	return degree;
}
float degree_to_rad(float degree){
	float rad = degree *(3.14 /180);
	return rad;
}

// initial pid
void pid_set_Kp_Ki_Kd(PID_handleTypedef* hpid,float Kp,float Ki,float Kd){
    hpid->Kp = Kp;
    hpid->Ki = Ki;
    hpid->Kd = Kd;
}

float calculat_pid_output(PID_handleTypedef* hpid){
    hpid->error = (hpid->setpoint -hpid->current);//degree
    hpid->integral += hpid->error;
    hpid->derivative = hpid->error - hpid->pre_error;
    float ouput_pid = hpid->Kp*hpid->error + hpid->Ki*hpid->integral + hpid->Kd*hpid->derivative;
    hpid->pre_error = hpid->error;
    return degree_to_rad(ouput_pid);//rad/s
}

float cal_speed_motor(float pid_output,float v_speed){
	return (float)(2*v_speed - pid_output*L)/2 ;
}


